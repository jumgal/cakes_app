[{"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/index.js":"1","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/App.js":"2","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/reportWebVitals.js":"3","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/screens/HomeScreen.js":"4","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/components/NavMain.js":"5","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/cakes.js":"6","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/components/CakesList.js":"7","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/screens/CakeScreen.js":"8","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/components/Footer.js":"9","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/store.js":"10","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/reducers/cakeReducers.js":"11","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/actions/cakeActions.js":"12","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/constants/productTypes.js":"13","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/components/Loader.js":"14","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/components/Message.js":"15","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/screens/CartScreen.js":"16","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/reducers/cartReducer.js":"17","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/constants/cartConstants.js":"18","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/actions/cartActions.js":"19","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/reducers/userReducers.js":"20","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/constants/userConstants.js":"21","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/actions/userActions.js":"22","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/screens/LoginScreen.js":"23","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/screens/RegisterScreen.js":"24","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/screens/ProfileScreen.js":"25"},{"size":333,"mtime":1610241710889,"results":"26","hashOfConfig":"27"},{"size":1085,"mtime":1624777467844,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1609888547978,"results":"29","hashOfConfig":"30"},{"size":1103,"mtime":1610248148873,"results":"31","hashOfConfig":"27"},{"size":1712,"mtime":1624750658980,"results":"32","hashOfConfig":"27"},{"size":3785,"mtime":1609911118190,"results":"33","hashOfConfig":"30"},{"size":1032,"mtime":1610251491333,"results":"34","hashOfConfig":"27"},{"size":4121,"mtime":1621182233680,"results":"35","hashOfConfig":"27"},{"size":317,"mtime":1609963893139,"results":"36","hashOfConfig":"27"},{"size":1203,"mtime":1624779701051,"results":"37","hashOfConfig":"27"},{"size":1114,"mtime":1610259083774,"results":"38","hashOfConfig":"27"},{"size":1161,"mtime":1610258969492,"results":"39","hashOfConfig":"27"},{"size":330,"mtime":1610254820373,"results":"40","hashOfConfig":"27"},{"size":150,"mtime":1610246656780,"results":"41","hashOfConfig":"27"},{"size":240,"mtime":1621197958659,"results":"42","hashOfConfig":"27"},{"size":5005,"mtime":1621827564680,"results":"43","hashOfConfig":"27"},{"size":931,"mtime":1621827549717,"results":"44","hashOfConfig":"27"},{"size":97,"mtime":1621183307018,"results":"45","hashOfConfig":"27"},{"size":811,"mtime":1621827543613,"results":"46","hashOfConfig":"27"},{"size":2587,"mtime":1624780398132,"results":"47","hashOfConfig":"27"},{"size":894,"mtime":1624777708678,"results":"48","hashOfConfig":"27"},{"size":4436,"mtime":1624779456912,"results":"49","hashOfConfig":"27"},{"size":2721,"mtime":1624775962534,"results":"50","hashOfConfig":"27"},{"size":3634,"mtime":1624773750311,"results":"51","hashOfConfig":"27"},{"size":7242,"mtime":1624780596155,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"bbzauf",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1e7r73g",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"55"},"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/index.js",[],["108","109"],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/App.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/reportWebVitals.js",[],["110","111"],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/screens/HomeScreen.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/components/NavMain.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/cakes.js",[],["112","113"],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/components/CakesList.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/screens/CakeScreen.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/components/Footer.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/store.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/reducers/cakeReducers.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/actions/cakeActions.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/constants/productTypes.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/components/Loader.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/components/Message.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/screens/CartScreen.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/reducers/cartReducer.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/constants/cartConstants.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/actions/cartActions.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/reducers/userReducers.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/constants/userConstants.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/actions/userActions.js",["114","115"],"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT } from '../constants/userConstants';\nimport {\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL, USER_DETAILS_RESET,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_RESET,\n    USER_UPDATE_PROFILE_FAIL\n\n\n}\n\n    from '../constants/userConstants'\n\nconst userLoginAction = (email, password) => async dispatch => {\n\n    try {\n\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            'Content-Type': 'application/json'\n        }\n\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n\n        console.log(error.response.data.message)\n    }\n}\n\nconst userLogoutAction = () => dispatch => {\n    localStorage.removeItem('userInfo')\n\n    dispatch({\n        type: USER_LOGOUT\n    })\n}\n\n\nconst userRegisterAction = (name, email, password) => async dispatch => {\n\n    try {\n\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            'Content-Type': 'application/json'\n        }\n\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/users/${id}`, config)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(userLogoutAction())\n        }\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.put(`/api/users/profile`, user, config)\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data,\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(userLogoutAction())\n        }\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: message,\n        })\n    }\n}\n\n\n\n\nexport { userLoginAction, userLogoutAction, userRegisterAction }","/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/screens/LoginScreen.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/screens/RegisterScreen.js",[],"/Users/jumgalbekarymbaev/Desktop/various/cake_app/frontend/src/screens/ProfileScreen.js",["116","117"],"import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\n// import { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ location, history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector((state) => state.userDetails)\n    const { loading, error, user } = userDetails\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    // const orderListMy = useSelector((state) => state.orderListMy)\n    // const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                // dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\n        }\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                { }\n                {success && <Message variant='success'>Profile Updated</Message>}\n                {loading ? (\n                    <Loader />\n                ) : error ? (\n                    <Message variant='danger'>{error}</Message>\n                ) : (\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type='name'\n                                placeholder='Enter name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                type='email'\n                                placeholder='Enter email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type='password'\n                                placeholder='Enter password'\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='confirmPassword'>\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control\n                                type='password'\n                                placeholder='Confirm password'\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Button type='submit' variant='primary'>\n                            Update\n                        </Button>\n                    </Form>\n                )}\n            </Col>\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {/* {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>DATE</th>\n                                <th>TOTAL</th>\n                                <th>PAID</th>\n                                <th>DELIVERED</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map((order) => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>{order.totalPrice}</td>\n                                    <td>\n                                        {order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                        )}\n                                    </td>\n                                    <td>\n                                        {order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                        )}\n                                    </td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button className='btn-sm' variant='light'>\n                                                Details\n                                            </Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )} */}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen;",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"118","replacedBy":"124"},{"ruleId":"120","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":6,"column":24,"nodeType":"128","messageId":"129","endLine":6,"endColumn":42},{"ruleId":"126","severity":1,"message":"130","line":9,"column":5,"nodeType":"128","messageId":"129","endLine":9,"endColumn":30},{"ruleId":"126","severity":1,"message":"131","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"132","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":23},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],["133"],["134"],"no-unused-vars","'USER_DETAILS_RESET' is defined but never used.","Identifier","unusedVar","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'Table' is defined but never used.","'LinkContainer' is defined but never used.","no-global-assign","no-unsafe-negation"]